import mkdirp from 'mkdirp'
import formidable from 'formidable'
import objectPath from 'object-path'
export function processRequest(request, { uploadDir } = {}) {
  if (uploadDir) mkdirp.sync(uploadDir)
  const form = formidable.IncomingForm({
    uploadDir
  })
  return new Promise((resolve, reject) => {
    form.parse(request, (error, { operations }, files) => {
      if (error) reject(new Error(error))
      operations = JSON.parse(operations)

      if (Object.keys(files).length) {
        const operationsPath = objectPath(operations)
        Object.keys(files).forEach(variablesPath => {
          const { name, type, size, path } = files[variablesPath]
          operationsPath.set(variablesPath, {
            name,
            type,
            size,
            path
          })
        })
      }

      resolve(operations)
    })
  })
}
export function apolloUploadKoa(options) {
  return async (ctx, next) => {
    if (ctx.request.is('multipart/form-data'))
      ctx.request.body = await processRequest(ctx.req, options)
    await next()
  }
}
export function apolloUploadExpress(options) {
  return (request, response, next) => {
    if (!request.is('multipart/form-data')) return next()
    processRequest(request, options)
      .then(body => {
        request.body = body
        next()
      })
      .catch(next)
  }
}
